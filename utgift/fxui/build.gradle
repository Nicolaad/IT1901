plugins {
    id 'java'
    id 'application'
    // use javafx modules
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'de.aaschmid.cpd' version '2.0'
    id 'jacoco'
    id 'com.github.spotbugs' version '2.0.0'
    id 'checkstyle'
}

version '1.0-SNAPSHOT'

sourceCompatibility = 1.8


repositories {
    jcenter()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    flatDir {
        dirs 'libs'
    }
}


spotbugs {
    ignoreFailures = true
}
checkstyle {
    configFile = project.file("../core/config/checkstyle/google_checks.xml")
}
// To generate an HTML report instead of XML
tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}
application {
    mainClassName ="ui.FxApp"
}
javafx {
    version = '11'
    modules = [ 'javafx.controls', 'javafx.fxml' ]
    // run with --debug-jvm flag and
    // launch debugger using Remote Java Application debug launch configuration
}
test {
    // don't run UI test on server (that cannot run javafx)
    if (project.hasProperty('ci') && "$ci" == 'gitlab') {
        exclude 'ui/*'
    }
}
/*
run {
    args = ["http://localhost:8080/", "[[63.1, 11.2], [63.2, 11.0]]"]
}
*/

dependencies {
    implementation project(':core')
    implementation project(':restserver')

    // persistens
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    // brukergrensesnitt
    testImplementation 'org.testfx:testfx-core:4.0.16-alpha'
    testImplementation 'org.testfx:testfx-junit:4.0.16-alpha'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    //json
    // implementation 'com.google.code.gson:gson:2.8.5'

}



